{"version":3,"sources":["webpack://serverState/webpack/bootstrap","webpack://serverState/external \"jQuery\"","webpack://serverState/./index.js","webpack://serverState/./external/jquery.form.js","webpack://serverState/./src/jquery.serializeobject.js","webpack://serverState/./src/jquery.deserialize.js","webpack://serverState/./src/jquery.serverstate.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jQuery","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","$","rCRLF","feature","fileapi","files","formdata","window","FormData","hasProp","fn","prop","doAjaxSubmit","e","options","data","isDefaultPrevented","preventDefault","target","closest","ajaxSubmit","captureSubmittingElement","$el","is","length","form","clk","type","offsetX","clk_x","clk_y","offsetY","offset","pageX","left","pageY","top","offsetLeft","offsetTop","setTimeout","log","debug","msg","Array","join","arguments","console","opera","postError","attr2","this","attr","apply","val","jquery","dataType","onSuccess","method","action","url","$form","success","trim","location","href","match","extend","ajaxSettings","iframeSrc","test","veto","trigger","beforeSerialize","traditional","qx","elements","a","formToArray","semantic","filtering","optionsData","isFunction","extraData","param","beforeSubmit","q","toUpperCase","indexOf","callbacks","resetForm","push","clearForm","includeHidden","oldSuccess","textStatus","jqXHR","successArguments","replaceTarget","each","isArray","merge","status","xhr","context","max","error","oldError","complete","oldComplete","fileInputs","filter","hasFileInputs","mp","multipart","fileAPI","jqxhr","shouldUseFrame","iframe","closeKeepAlive","fileUploadIframe","append","serializedData","part","serialized","split","len","result","replace","decodeURIComponent","deepSerialize","contentType","processData","cache","uploadProgress","upload","addEventListener","event","percent","position","loaded","total","lengthComputable","Math","ceil","beforeSend","formData","ajax","fileUploadXhr","removeData","k","el","g","id","$io","io","sub","timedOut","timeoutHandle","deferred","Deferred","abort","removeAttr","Date","getTime","ownerDocument","$body","iframeTarget","css","aborted","responseText","responseXML","statusText","getAllResponseHeaders","getResponseHeader","setRequestHeader","contentWindow","document","execCommand","ignore","global","active","reject","disabled","CLIENT_TIMEOUT_ABORT","SERVER_ABORT","getDoc","frame","doc","err","contentDocument","csrf_token","csrf_param","doSubmit","et","setAttribute","skipEncodingOverride","encoding","enctype","timeout","cb","extraInputs","isPlainObject","appendTo","attachEvent","checkState","state","readyState","toLowerCase","clearTimeout","submit","submitFn","createElement","remove","forceSync","callbackProcessed","domCheckCount","detachEvent","removeEventListener","errMsg","isXml","XMLDocument","isXMLDoc","body","innerHTML","docRoot","documentElement","header","headers","content-type","Number","getAttribute","dt","scr","textarea","ta","getElementsByTagName","pre","b","textContent","innerText","toXml","httpData","resolve","parseXML","ActiveXObject","async","loadXML","DOMParser","parseFromString","nodeName","parseJSON","ct","xml","dataFilter","globalEval","ajaxForm","delegation","on","selector","isReady","off","ajaxFormUnbind","els2","j","v","jmax","formId","els","makeArray","navigator","userAgent","concat","map","fieldValue","constructor","required","$input","input","formSerialize","fieldSerialize","successful","tag","tagName","checked","selectedIndex","index","ops","one","op","selected","attributes","text","clearFields","clearInputs","re","replaceWith","clone","defaultChecked","defaultValue","select","parents","multiple","defaultSelected","find","forEl","list","unshift","reset","nodeType","enable","$sel","parent","serializeObject","obj","serializeArray","factory","updateKeyValueArray","current","updateTypes","getElementType","element","update","elementIndex","valueIndex","callback","elementProperty","types","inArray","getPropertyToUpdate","fields","option","field","defaultOptions","change","noop","deserialize","normalized","rPlus","normalizeData","elementsByName","getFieldsByName","prefix","values","elname","defaultParams","currentts","now","deserializeForm","deserializeFormCallback","formValidation","formValid","validity","valid","validField","stateInit","endpoint","stateSave","params","disableFormValidation","validationCallback","stateJsonSave","axios","post","then","response","stateLoad","getJSON","stateSubmit","optSuccess","stateJsonSubmit"],"mappings":"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","file":"./serverstate.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = jQuery;","require('./external/jquery.form.js'); \r\nrequire('./src/jquery.serializeobject.js');\r\nrequire('./src/jquery.deserialize.js');\r\nrequire('./src/jquery.serverstate.js');\r\n\r\n","/*!\n * jQuery Form Plugin\n * version: 4.2.2\n * Requires jQuery v1.7.2 or later\n * Project repository: https://github.com/jquery-form/form\n\n * Copyright 2017 Kevin Morris\n * Copyright 2006 M. Alsup\n\n * Dual licensed under the LGPL-2.1+ or MIT licenses\n * https://github.com/jquery-form/form#license\n\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n */\n/* global ActiveXObject */\n\n/* eslint-disable */\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['jquery'], factory);\n\t} else if (typeof module === 'object' && module.exports) {\n\t\t// Node/CommonJS\n\t\tmodule.exports = function( root, jQuery ) {\n\t\t\tif (typeof jQuery === 'undefined') {\n\t\t\t\t// require('jQuery') returns a factory that requires window to build a jQuery instance, we normalize how we use modules\n\t\t\t\t// that require this pattern but the window provided is a noop if it's defined (how jquery works)\n\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\tjQuery = require('jquery');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjQuery = require('jquery')(root);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfactory(jQuery);\n\t\t\treturn jQuery;\n\t\t};\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n\n}(function ($) {\n/* eslint-enable */\n\t'use strict';\n\n\t/*\n\t\tUsage Note:\n\t\t-----------\n\t\tDo not use both ajaxSubmit and ajaxForm on the same form. These\n\t\tfunctions are mutually exclusive. Use ajaxSubmit if you want\n\t\tto bind your own submit handler to the form. For example,\n\n\t\t$(document).ready(function() {\n\t\t\t$('#myForm').on('submit', function(e) {\n\t\t\t\te.preventDefault(); // <-- important\n\t\t\t\t$(this).ajaxSubmit({\n\t\t\t\t\ttarget: '#output'\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tUse ajaxForm when you want the plugin to manage all the event binding\n\t\tfor you. For example,\n\n\t\t$(document).ready(function() {\n\t\t\t$('#myForm').ajaxForm({\n\t\t\t\ttarget: '#output'\n\t\t\t});\n\t\t});\n\n\t\tYou can also use ajaxForm with delegation (requires jQuery v1.7+), so the\n\t\tform does not have to exist when you invoke ajaxForm:\n\n\t\t$('#myForm').ajaxForm({\n\t\t\tdelegation: true,\n\t\t\ttarget: '#output'\n\t\t});\n\n\t\tWhen using ajaxForm, the ajaxSubmit function will be invoked for you\n\t\tat the appropriate time.\n\t*/\n\n\tvar rCRLF = /\\r?\\n/g;\n\n\t/**\n\t * Feature detection\n\t */\n\tvar feature = {};\n\n\tfeature.fileapi = $('<input type=\"file\">').get(0).files !== undefined;\n\tfeature.formdata = (typeof window.FormData !== 'undefined');\n\n\tvar hasProp = !!$.fn.prop;\n\n\t// attr2 uses prop when it can but checks the return type for\n\t// an expected string. This accounts for the case where a form\n\t// contains inputs with names like \"action\" or \"method\"; in those\n\t// cases \"prop\" returns the element\n\t$.fn.attr2 = function() {\n\t\tif (!hasProp) {\n\t\t\treturn this.attr.apply(this, arguments);\n\t\t}\n\n\t\tvar val = this.prop.apply(this, arguments);\n\n\t\tif ((val && val.jquery) || typeof val === 'string') {\n\t\t\treturn val;\n\t\t}\n\n\t\treturn this.attr.apply(this, arguments);\n\t};\n\n\t/**\n\t * ajaxSubmit() provides a mechanism for immediately submitting\n\t * an HTML form using AJAX.\n\t *\n\t * @param\t{object|string}\toptions\t\tjquery.form.js parameters or custom url for submission\n\t * @param\t{object}\t\tdata\t\textraData\n\t * @param\t{string}\t\tdataType\tajax dataType\n\t * @param\t{function}\t\tonSuccess\tajax success callback function\n\t */\n\t$.fn.ajaxSubmit = function(options, data, dataType, onSuccess) {\n\t\t// fast fail if nothing selected (http://dev.jquery.com/ticket/2752)\n\t\tif (!this.length) {\n\t\t\tlog('ajaxSubmit: skipping submit process - no element selected');\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/* eslint consistent-this: [\"error\", \"$form\"] */\n\t\tvar method, action, url, $form = this;\n\n\t\tif (typeof options === 'function') {\n\t\t\toptions = {success: options};\n\n\t\t} else if (typeof options === 'string' || (options === false && arguments.length > 0)) {\n\t\t\toptions = {\n\t\t\t\t'url'      : options,\n\t\t\t\t'data'     : data,\n\t\t\t\t'dataType' : dataType\n\t\t\t};\n\n\t\t\tif (typeof onSuccess === 'function') {\n\t\t\t\toptions.success = onSuccess;\n\t\t\t}\n\n\t\t} else if (typeof options === 'undefined') {\n\t\t\toptions = {};\n\t\t}\n\n\t\tmethod = options.method || options.type || this.attr2('method');\n\t\taction = options.url || this.attr2('action');\n\n\t\turl = (typeof action === 'string') ? $.trim(action) : '';\n\t\turl = url || window.location.href || '';\n\t\tif (url) {\n\t\t\t// clean url (don't include hash vaue)\n\t\t\turl = (url.match(/^([^#]+)/) || [])[1];\n\t\t}\n\n\t\toptions = $.extend(true, {\n\t\t\turl       : url,\n\t\t\tsuccess   : $.ajaxSettings.success,\n\t\t\ttype      : method || $.ajaxSettings.type,\n\t\t\tiframeSrc : /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank'\t\t// eslint-disable-line no-script-url\n\t\t}, options);\n\n\t\t// hook for manipulating the form data before it is extracted;\n\t\t// convenient for use with rich editors like tinyMCE or FCKEditor\n\t\tvar veto = {};\n\n\t\tthis.trigger('form-pre-serialize', [this, options, veto]);\n\n\t\tif (veto.veto) {\n\t\t\tlog('ajaxSubmit: submit vetoed via form-pre-serialize trigger');\n\n\t\t\treturn this;\n\t\t}\n\n\t\t// provide opportunity to alter form data before it is serialized\n\t\tif (options.beforeSerialize && options.beforeSerialize(this, options) === false) {\n\t\t\tlog('ajaxSubmit: submit aborted via beforeSerialize callback');\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvar traditional = options.traditional;\n\n\t\tif (typeof traditional === 'undefined') {\n\t\t\ttraditional = $.ajaxSettings.traditional;\n\t\t}\n\n\t\tvar elements = [];\n\t\tvar qx, a = this.formToArray(options.semantic, elements, options.filtering);\n\n\t\tif (options.data) {\n\t\t\tvar optionsData = $.isFunction(options.data) ? options.data(a) : options.data;\n\n\t\t\toptions.extraData = optionsData;\n\t\t\tqx = $.param(optionsData, traditional);\n\t\t}\n\n\t\t// give pre-submit callback an opportunity to abort the submit\n\t\tif (options.beforeSubmit && options.beforeSubmit(a, this, options) === false) {\n\t\t\tlog('ajaxSubmit: submit aborted via beforeSubmit callback');\n\n\t\t\treturn this;\n\t\t}\n\n\t\t// fire vetoable 'validate' event\n\t\tthis.trigger('form-submit-validate', [a, this, options, veto]);\n\t\tif (veto.veto) {\n\t\t\tlog('ajaxSubmit: submit vetoed via form-submit-validate trigger');\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvar q = $.param(a, traditional);\n\n\t\tif (qx) {\n\t\t\tq = (q ? (q + '&' + qx) : qx);\n\t\t}\n\n\t\tif (options.type.toUpperCase() === 'GET') {\n\t\t\toptions.url += (options.url.indexOf('?') >= 0 ? '&' : '?') + q;\n\t\t\toptions.data = null;\t// data is null for 'get'\n\t\t} else {\n\t\t\toptions.data = q;\t\t// data is the query string for 'post'\n\t\t}\n\n\t\tvar callbacks = [];\n\n\t\tif (options.resetForm) {\n\t\t\tcallbacks.push(function() {\n\t\t\t\t$form.resetForm();\n\t\t\t});\n\t\t}\n\n\t\tif (options.clearForm) {\n\t\t\tcallbacks.push(function() {\n\t\t\t\t$form.clearForm(options.includeHidden);\n\t\t\t});\n\t\t}\n\n\t\t// perform a load on the target only if dataType is not provided\n\t\tif (!options.dataType && options.target) {\n\t\t\tvar oldSuccess = options.success || function(){};\n\n\t\t\tcallbacks.push(function(data, textStatus, jqXHR) {\n\t\t\t\tvar successArguments = arguments,\n\t\t\t\t\tfn = options.replaceTarget ? 'replaceWith' : 'html';\n\n\t\t\t\t$(options.target)[fn](data).each(function(){\n\t\t\t\t\toldSuccess.apply(this, successArguments);\n\t\t\t\t});\n\t\t\t});\n\n\t\t} else if (options.success) {\n\t\t\tif ($.isArray(options.success)) {\n\t\t\t\t$.merge(callbacks, options.success);\n\t\t\t} else {\n\t\t\t\tcallbacks.push(options.success);\n\t\t\t}\n\t\t}\n\n\t\toptions.success = function(data, status, xhr) { // jQuery 1.4+ passes xhr as 3rd arg\n\t\t\tvar context = options.context || this;\t\t// jQuery 1.4+ supports scope context\n\n\t\t\tfor (var i = 0, max = callbacks.length; i < max; i++) {\n\t\t\t\tcallbacks[i].apply(context, [data, status, xhr || $form, $form]);\n\t\t\t}\n\t\t};\n\n\t\tif (options.error) {\n\t\t\tvar oldError = options.error;\n\n\t\t\toptions.error = function(xhr, status, error) {\n\t\t\t\tvar context = options.context || this;\n\n\t\t\t\toldError.apply(context, [xhr, status, error, $form]);\n\t\t\t};\n\t\t}\n\n\t\tif (options.complete) {\n\t\t\tvar oldComplete = options.complete;\n\n\t\t\toptions.complete = function(xhr, status) {\n\t\t\t\tvar context = options.context || this;\n\n\t\t\t\toldComplete.apply(context, [xhr, status, $form]);\n\t\t\t};\n\t\t}\n\n\t\t// are there files to upload?\n\n\t\t// [value] (issue #113), also see comment:\n\t\t// https://github.com/malsup/form/commit/588306aedba1de01388032d5f42a60159eea9228#commitcomment-2180219\n\t\tvar fileInputs = $('input[type=file]:enabled', this).filter(function() {\n\t\t\treturn $(this).val() !== '';\n\t\t});\n\t\tvar hasFileInputs = fileInputs.length > 0;\n\t\tvar mp = 'multipart/form-data';\n\t\tvar multipart = ($form.attr('enctype') === mp || $form.attr('encoding') === mp);\n\t\tvar fileAPI = feature.fileapi && feature.formdata;\n\n\t\tlog('fileAPI :' + fileAPI);\n\n\t\tvar shouldUseFrame = (hasFileInputs || multipart) && !fileAPI;\n\t\tvar jqxhr;\n\n\t\t// options.iframe allows user to force iframe mode\n\t\t// 06-NOV-09: now defaulting to iframe mode if file input is detected\n\t\tif (options.iframe !== false && (options.iframe || shouldUseFrame)) {\n\t\t\t// hack to fix Safari hang (thanks to Tim Molendijk for this)\n\t\t\t// see: http://groups.google.com/group/jquery-dev/browse_thread/thread/36395b7ab510dd5d\n\t\t\tif (options.closeKeepAlive) {\n\t\t\t\t$.get(options.closeKeepAlive, function() {\n\t\t\t\t\tjqxhr = fileUploadIframe(a);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tjqxhr = fileUploadIframe(a);\n\t\t\t}\n\n\t\t} else if ((hasFileInputs || multipart) && fileAPI) {\n\t\t\tjqxhr = fileUploadXhr(a);\n\n\t\t} else {\n\t\t\tjqxhr = $.ajax(options);\n\t\t}\n\n\t\t$form.removeData('jqxhr').data('jqxhr', jqxhr);\n\n\t\t// clear element array\n\t\tfor (var k = 0; k < elements.length; k++) {\n\t\t\telements[k] = null;\n\t\t}\n\n\t\t// fire 'notify' event\n\t\tthis.trigger('form-submit-notify', [this, options]);\n\n\t\treturn this;\n\n\t\t// utility fn for deep serialization\n\t\tfunction deepSerialize(extraData) {\n\t\t\tvar serialized = $.param(extraData, options.traditional).split('&');\n\t\t\tvar len = serialized.length;\n\t\t\tvar result = [];\n\t\t\tvar i, part;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t// #252; undo param space replacement\n\t\t\t\tserialized[i] = serialized[i].replace(/\\+/g, ' ');\n\t\t\t\tpart = serialized[i].split('=');\n\t\t\t\t// #278; use array instead of object storage, favoring array serializations\n\t\t\t\tresult.push([decodeURIComponent(part[0]), decodeURIComponent(part[1])]);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t// XMLHttpRequest Level 2 file uploads (big hat tip to francois2metz)\n\t\tfunction fileUploadXhr(a) {\n\t\t\tvar formdata = new FormData();\n\n\t\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\t\tformdata.append(a[i].name, a[i].value);\n\t\t\t}\n\n\t\t\tif (options.extraData) {\n\t\t\t\tvar serializedData = deepSerialize(options.extraData);\n\n\t\t\t\tfor (i = 0; i < serializedData.length; i++) {\n\t\t\t\t\tif (serializedData[i]) {\n\t\t\t\t\t\tformdata.append(serializedData[i][0], serializedData[i][1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toptions.data = null;\n\n\t\t\tvar s = $.extend(true, {}, $.ajaxSettings, options, {\n\t\t\t\tcontentType : false,\n\t\t\t\tprocessData : false,\n\t\t\t\tcache       : false,\n\t\t\t\ttype        : method || 'POST'\n\t\t\t});\n\n\t\t\tif (options.uploadProgress) {\n\t\t\t\t// workaround because jqXHR does not expose upload property\n\t\t\t\ts.xhr = function() {\n\t\t\t\t\tvar xhr = $.ajaxSettings.xhr();\n\n\t\t\t\t\tif (xhr.upload) {\n\t\t\t\t\t\txhr.upload.addEventListener('progress', function(event) {\n\t\t\t\t\t\t\tvar percent = 0;\n\t\t\t\t\t\t\tvar position = event.loaded || event.position;\t\t\t/* event.position is deprecated */\n\t\t\t\t\t\t\tvar total = event.total;\n\n\t\t\t\t\t\t\tif (event.lengthComputable) {\n\t\t\t\t\t\t\t\tpercent = Math.ceil(position / total * 100);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toptions.uploadProgress(event, position, total, percent);\n\t\t\t\t\t\t}, false);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn xhr;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ts.data = null;\n\n\t\t\tvar beforeSend = s.beforeSend;\n\n\t\t\ts.beforeSend = function(xhr, o) {\n\t\t\t\t// Send FormData() provided by user\n\t\t\t\tif (options.formData) {\n\t\t\t\t\to.data = options.formData;\n\t\t\t\t} else {\n\t\t\t\t\to.data = formdata;\n\t\t\t\t}\n\n\t\t\t\tif (beforeSend) {\n\t\t\t\t\tbeforeSend.call(this, xhr, o);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn $.ajax(s);\n\t\t}\n\n\t\t// private function for handling file uploads (hat tip to YAHOO!)\n\t\tfunction fileUploadIframe(a) {\n\t\t\tvar form = $form[0], el, i, s, g, id, $io, io, xhr, sub, n, timedOut, timeoutHandle;\n\t\t\tvar deferred = $.Deferred();\n\n\t\t\t// #341\n\t\t\tdeferred.abort = function(status) {\n\t\t\t\txhr.abort(status);\n\t\t\t};\n\n\t\t\tif (a) {\n\t\t\t\t// ensure that every serialized input is still enabled\n\t\t\t\tfor (i = 0; i < elements.length; i++) {\n\t\t\t\t\tel = $(elements[i]);\n\t\t\t\t\tif (hasProp) {\n\t\t\t\t\t\tel.prop('disabled', false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.removeAttr('disabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ts = $.extend(true, {}, $.ajaxSettings, options);\n\t\t\ts.context = s.context || s;\n\t\t\tid = 'jqFormIO' + new Date().getTime();\n\t\t\tvar ownerDocument = form.ownerDocument;\n\t\t\tvar $body = $form.closest('body');\n\n\t\t\tif (s.iframeTarget) {\n\t\t\t\t$io = $(s.iframeTarget, ownerDocument);\n\t\t\t\tn = $io.attr2('name');\n\t\t\t\tif (!n) {\n\t\t\t\t\t$io.attr2('name', id);\n\t\t\t\t} else {\n\t\t\t\t\tid = n;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t$io = $('<iframe name=\"' + id + '\" src=\"' + s.iframeSrc + '\" />', ownerDocument);\n\t\t\t\t$io.css({position: 'absolute', top: '-1000px', left: '-1000px'});\n\t\t\t}\n\t\t\tio = $io[0];\n\n\n\t\t\txhr = { // mock object\n\t\t\t\taborted               : 0,\n\t\t\t\tresponseText          : null,\n\t\t\t\tresponseXML           : null,\n\t\t\t\tstatus                : 0,\n\t\t\t\tstatusText            : 'n/a',\n\t\t\t\tgetAllResponseHeaders : function() {},\n\t\t\t\tgetResponseHeader     : function() {},\n\t\t\t\tsetRequestHeader      : function() {},\n\t\t\t\tabort                 : function(status) {\n\t\t\t\t\tvar e = (status === 'timeout' ? 'timeout' : 'aborted');\n\n\t\t\t\t\tlog('aborting upload... ' + e);\n\t\t\t\t\tthis.aborted = 1;\n\n\t\t\t\t\ttry { // #214, #257\n\t\t\t\t\t\tif (io.contentWindow.document.execCommand) {\n\t\t\t\t\t\t\tio.contentWindow.document.execCommand('Stop');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (ignore) {}\n\n\t\t\t\t\t$io.attr('src', s.iframeSrc); // abort op in progress\n\t\t\t\t\txhr.error = e;\n\t\t\t\t\tif (s.error) {\n\t\t\t\t\t\ts.error.call(s.context, xhr, e, status);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (g) {\n\t\t\t\t\t\t$.event.trigger('ajaxError', [xhr, s, e]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s.complete) {\n\t\t\t\t\t\ts.complete.call(s.context, xhr, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tg = s.global;\n\t\t\t// trigger ajax global events so that activity/block indicators work like normal\n\t\t\tif (g && $.active++ === 0) {\n\t\t\t\t$.event.trigger('ajaxStart');\n\t\t\t}\n\t\t\tif (g) {\n\t\t\t\t$.event.trigger('ajaxSend', [xhr, s]);\n\t\t\t}\n\n\t\t\tif (s.beforeSend && s.beforeSend.call(s.context, xhr, s) === false) {\n\t\t\t\tif (s.global) {\n\t\t\t\t\t$.active--;\n\t\t\t\t}\n\t\t\t\tdeferred.reject();\n\n\t\t\t\treturn deferred;\n\t\t\t}\n\n\t\t\tif (xhr.aborted) {\n\t\t\t\tdeferred.reject();\n\n\t\t\t\treturn deferred;\n\t\t\t}\n\n\t\t\t// add submitting element to data if we know it\n\t\t\tsub = form.clk;\n\t\t\tif (sub) {\n\t\t\t\tn = sub.name;\n\t\t\t\tif (n && !sub.disabled) {\n\t\t\t\t\ts.extraData = s.extraData || {};\n\t\t\t\t\ts.extraData[n] = sub.value;\n\t\t\t\t\tif (sub.type === 'image') {\n\t\t\t\t\t\ts.extraData[n + '.x'] = form.clk_x;\n\t\t\t\t\t\ts.extraData[n + '.y'] = form.clk_y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar CLIENT_TIMEOUT_ABORT = 1;\n\t\t\tvar SERVER_ABORT = 2;\n\n\t\t\tfunction getDoc(frame) {\n\t\t\t\t/* it looks like contentWindow or contentDocument do not\n\t\t\t\t * carry the protocol property in ie8, when running under ssl\n\t\t\t\t * frame.document is the only valid response document, since\n\t\t\t\t * the protocol is know but not on the other two objects. strange?\n\t\t\t\t * \"Same origin policy\" http://en.wikipedia.org/wiki/Same_origin_policy\n\t\t\t\t */\n\n\t\t\t\tvar doc = null;\n\n\t\t\t\t// IE8 cascading access check\n\t\t\t\ttry {\n\t\t\t\t\tif (frame.contentWindow) {\n\t\t\t\t\t\tdoc = frame.contentWindow.document;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// IE8 access denied under ssl & missing protocol\n\t\t\t\t\tlog('cannot get iframe.contentWindow document: ' + err);\n\t\t\t\t}\n\n\t\t\t\tif (doc) { // successful getting content\n\t\t\t\t\treturn doc;\n\t\t\t\t}\n\n\t\t\t\ttry { // simply checking may throw in ie8 under ssl or mismatched protocol\n\t\t\t\t\tdoc = frame.contentDocument ? frame.contentDocument : frame.document;\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// last attempt\n\t\t\t\t\tlog('cannot get iframe.contentDocument: ' + err);\n\t\t\t\t\tdoc = frame.document;\n\t\t\t\t}\n\n\t\t\t\treturn doc;\n\t\t\t}\n\n\t\t\t// Rails CSRF hack (thanks to Yvan Barthelemy)\n\t\t\tvar csrf_token = $('meta[name=csrf-token]').attr('content');\n\t\t\tvar csrf_param = $('meta[name=csrf-param]').attr('content');\n\n\t\t\tif (csrf_param && csrf_token) {\n\t\t\t\ts.extraData = s.extraData || {};\n\t\t\t\ts.extraData[csrf_param] = csrf_token;\n\t\t\t}\n\n\t\t\t// take a breath so that pending repaints get some cpu time before the upload starts\n\t\t\tfunction doSubmit() {\n\t\t\t\t// make sure form attrs are set\n\t\t\t\tvar t = $form.attr2('target'),\n\t\t\t\t\ta = $form.attr2('action'),\n\t\t\t\t\tmp = 'multipart/form-data',\n\t\t\t\t\tet = $form.attr('enctype') || $form.attr('encoding') || mp;\n\n\t\t\t\t// update form attrs in IE friendly way\n\t\t\t\tform.setAttribute('target', id);\n\t\t\t\tif (!method || /post/i.test(method)) {\n\t\t\t\t\tform.setAttribute('method', 'POST');\n\t\t\t\t}\n\t\t\t\tif (a !== s.url) {\n\t\t\t\t\tform.setAttribute('action', s.url);\n\t\t\t\t}\n\n\t\t\t\t// ie borks in some cases when setting encoding\n\t\t\t\tif (!s.skipEncodingOverride && (!method || /post/i.test(method))) {\n\t\t\t\t\t$form.attr({\n\t\t\t\t\t\tencoding : 'multipart/form-data',\n\t\t\t\t\t\tenctype  : 'multipart/form-data'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// support timout\n\t\t\t\tif (s.timeout) {\n\t\t\t\t\ttimeoutHandle = setTimeout(function() {\n\t\t\t\t\t\ttimedOut = true; cb(CLIENT_TIMEOUT_ABORT);\n\t\t\t\t\t}, s.timeout);\n\t\t\t\t}\n\n\t\t\t\t// look for server aborts\n\t\t\t\tfunction checkState() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar state = getDoc(io).readyState;\n\n\t\t\t\t\t\tlog('state = ' + state);\n\t\t\t\t\t\tif (state && state.toLowerCase() === 'uninitialized') {\n\t\t\t\t\t\t\tsetTimeout(checkState, 50);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlog('Server abort: ', e, ' (', e.name, ')');\n\t\t\t\t\t\tcb(SERVER_ABORT);\t\t\t\t// eslint-disable-line callback-return\n\t\t\t\t\t\tif (timeoutHandle) {\n\t\t\t\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimeoutHandle = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add \"extra\" data to form if provided in options\n\t\t\t\tvar extraInputs = [];\n\n\t\t\t\ttry {\n\t\t\t\t\tif (s.extraData) {\n\t\t\t\t\t\tfor (var n in s.extraData) {\n\t\t\t\t\t\t\tif (s.extraData.hasOwnProperty(n)) {\n\t\t\t\t\t\t\t\t// if using the $.param format that allows for multiple values with the same name\n\t\t\t\t\t\t\t\tif ($.isPlainObject(s.extraData[n]) && s.extraData[n].hasOwnProperty('name') && s.extraData[n].hasOwnProperty('value')) {\n\t\t\t\t\t\t\t\t\textraInputs.push(\n\t\t\t\t\t\t\t\t\t$('<input type=\"hidden\" name=\"' + s.extraData[n].name + '\">', ownerDocument).val(s.extraData[n].value)\n\t\t\t\t\t\t\t\t\t\t.appendTo(form)[0]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\textraInputs.push(\n\t\t\t\t\t\t\t\t\t$('<input type=\"hidden\" name=\"' + n + '\">', ownerDocument).val(s.extraData[n])\n\t\t\t\t\t\t\t\t\t\t.appendTo(form)[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!s.iframeTarget) {\n\t\t\t\t\t\t// add iframe to doc and submit the form\n\t\t\t\t\t\t$io.appendTo($body);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (io.attachEvent) {\n\t\t\t\t\t\tio.attachEvent('onload', cb);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tio.addEventListener('load', cb, false);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(checkState, 15);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tform.submit();\n\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t// just in case form has element with name/id of 'submit'\n\t\t\t\t\t\tvar submitFn = document.createElement('form').submit;\n\n\t\t\t\t\t\tsubmitFn.apply(form);\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\t\t\t\t\t// reset attrs and remove \"extra\" input elements\n\t\t\t\t\tform.setAttribute('action', a);\n\t\t\t\t\tform.setAttribute('enctype', et); // #380\n\t\t\t\t\tif (t) {\n\t\t\t\t\t\tform.setAttribute('target', t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$form.removeAttr('target');\n\t\t\t\t\t}\n\t\t\t\t\t$(extraInputs).remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (s.forceSync) {\n\t\t\t\tdoSubmit();\n\t\t\t} else {\n\t\t\t\tsetTimeout(doSubmit, 10); // this lets dom updates render\n\t\t\t}\n\n\t\t\tvar data, doc, domCheckCount = 50, callbackProcessed;\n\n\t\t\tfunction cb(e) {\n\t\t\t\tif (xhr.aborted || callbackProcessed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdoc = getDoc(io);\n\t\t\t\tif (!doc) {\n\t\t\t\t\tlog('cannot access response document');\n\t\t\t\t\te = SERVER_ABORT;\n\t\t\t\t}\n\t\t\t\tif (e === CLIENT_TIMEOUT_ABORT && xhr) {\n\t\t\t\t\txhr.abort('timeout');\n\t\t\t\t\tdeferred.reject(xhr, 'timeout');\n\n\t\t\t\t\treturn;\n\n\t\t\t\t} else if (e === SERVER_ABORT && xhr) {\n\t\t\t\t\txhr.abort('server abort');\n\t\t\t\t\tdeferred.reject(xhr, 'error', 'server abort');\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!doc || doc.location.href === s.iframeSrc) {\n\t\t\t\t\t// response not received yet\n\t\t\t\t\tif (!timedOut) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (io.detachEvent) {\n\t\t\t\t\tio.detachEvent('onload', cb);\n\t\t\t\t} else {\n\t\t\t\t\tio.removeEventListener('load', cb, false);\n\t\t\t\t}\n\n\t\t\t\tvar status = 'success', errMsg;\n\n\t\t\t\ttry {\n\t\t\t\t\tif (timedOut) {\n\t\t\t\t\t\tthrow 'timeout';\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isXml = s.dataType === 'xml' || doc.XMLDocument || $.isXMLDoc(doc);\n\n\t\t\t\t\tlog('isXml=' + isXml);\n\n\t\t\t\t\tif (!isXml && window.opera && (doc.body === null || !doc.body.innerHTML)) {\n\t\t\t\t\t\tif (--domCheckCount) {\n\t\t\t\t\t\t\t// in some browsers (Opera) the iframe DOM is not always traversable when\n\t\t\t\t\t\t\t// the onload callback fires, so we loop a bit to accommodate\n\t\t\t\t\t\t\tlog('requeing onLoad callback, DOM not available');\n\t\t\t\t\t\t\tsetTimeout(cb, 250);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// let this fall through because server response could be an empty document\n\t\t\t\t\t\t// log('Could not access iframe DOM after mutiple tries.');\n\t\t\t\t\t\t// throw 'DOMException: not available';\n\t\t\t\t\t}\n\n\t\t\t\t\t// log('response detected');\n\t\t\t\t\tvar docRoot = doc.body ? doc.body : doc.documentElement;\n\n\t\t\t\t\txhr.responseText = docRoot ? docRoot.innerHTML : null;\n\t\t\t\t\txhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;\n\t\t\t\t\tif (isXml) {\n\t\t\t\t\t\ts.dataType = 'xml';\n\t\t\t\t\t}\n\t\t\t\t\txhr.getResponseHeader = function(header){\n\t\t\t\t\t\tvar headers = {'content-type': s.dataType};\n\n\t\t\t\t\t\treturn headers[header.toLowerCase()];\n\t\t\t\t\t};\n\t\t\t\t\t// support for XHR 'status' & 'statusText' emulation :\n\t\t\t\t\tif (docRoot) {\n\t\t\t\t\t\txhr.status = Number(docRoot.getAttribute('status')) || xhr.status;\n\t\t\t\t\t\txhr.statusText = docRoot.getAttribute('statusText') || xhr.statusText;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar dt = (s.dataType || '').toLowerCase();\n\t\t\t\t\tvar scr = /(json|script|text)/.test(dt);\n\n\t\t\t\t\tif (scr || s.textarea) {\n\t\t\t\t\t\t// see if user embedded response in textarea\n\t\t\t\t\t\tvar ta = doc.getElementsByTagName('textarea')[0];\n\n\t\t\t\t\t\tif (ta) {\n\t\t\t\t\t\t\txhr.responseText = ta.value;\n\t\t\t\t\t\t\t// support for XHR 'status' & 'statusText' emulation :\n\t\t\t\t\t\t\txhr.status = Number(ta.getAttribute('status')) || xhr.status;\n\t\t\t\t\t\t\txhr.statusText = ta.getAttribute('statusText') || xhr.statusText;\n\n\t\t\t\t\t\t} else if (scr) {\n\t\t\t\t\t\t\t// account for browsers injecting pre around json response\n\t\t\t\t\t\t\tvar pre = doc.getElementsByTagName('pre')[0];\n\t\t\t\t\t\t\tvar b = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\t\t\tif (pre) {\n\t\t\t\t\t\t\t\txhr.responseText = pre.textContent ? pre.textContent : pre.innerText;\n\t\t\t\t\t\t\t} else if (b) {\n\t\t\t\t\t\t\t\txhr.responseText = b.textContent ? b.textContent : b.innerText;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (dt === 'xml' && !xhr.responseXML && xhr.responseText) {\n\t\t\t\t\t\txhr.responseXML = toXml(xhr.responseText);\t\t\t// eslint-disable-line no-use-before-define\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata = httpData(xhr, dt, s);\t\t\t\t\t\t// eslint-disable-line no-use-before-define\n\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tstatus = 'parsererror';\n\t\t\t\t\t\txhr.error = errMsg = (err || status);\n\t\t\t\t\t}\n\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlog('error caught: ', err);\n\t\t\t\t\tstatus = 'error';\n\t\t\t\t\txhr.error = errMsg = (err || status);\n\t\t\t\t}\n\n\t\t\t\tif (xhr.aborted) {\n\t\t\t\t\tlog('upload aborted');\n\t\t\t\t\tstatus = null;\n\t\t\t\t}\n\n\t\t\t\tif (xhr.status) { // we've set xhr.status\n\t\t\t\t\tstatus = ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304) ? 'success' : 'error';\n\t\t\t\t}\n\n\t\t\t\t// ordering of these callbacks/triggers is odd, but that's how $.ajax does it\n\t\t\t\tif (status === 'success') {\n\t\t\t\t\tif (s.success) {\n\t\t\t\t\t\ts.success.call(s.context, data, 'success', xhr);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(xhr.responseText, 'success', xhr);\n\n\t\t\t\t\tif (g) {\n\t\t\t\t\t\t$.event.trigger('ajaxSuccess', [xhr, s]);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (status) {\n\t\t\t\t\tif (typeof errMsg === 'undefined') {\n\t\t\t\t\t\terrMsg = xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\tif (s.error) {\n\t\t\t\t\t\ts.error.call(s.context, xhr, status, errMsg);\n\t\t\t\t\t}\n\t\t\t\t\tdeferred.reject(xhr, 'error', errMsg);\n\t\t\t\t\tif (g) {\n\t\t\t\t\t\t$.event.trigger('ajaxError', [xhr, s, errMsg]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (g) {\n\t\t\t\t\t$.event.trigger('ajaxComplete', [xhr, s]);\n\t\t\t\t}\n\n\t\t\t\tif (g && !--$.active) {\n\t\t\t\t\t$.event.trigger('ajaxStop');\n\t\t\t\t}\n\n\t\t\t\tif (s.complete) {\n\t\t\t\t\ts.complete.call(s.context, xhr, status);\n\t\t\t\t}\n\n\t\t\t\tcallbackProcessed = true;\n\t\t\t\tif (s.timeout) {\n\t\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t\t}\n\n\t\t\t\t// clean up\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif (!s.iframeTarget) {\n\t\t\t\t\t\t$io.remove();\n\t\t\t\t\t} else { // adding else to clean up existing iframe response.\n\t\t\t\t\t\t$io.attr('src', s.iframeSrc);\n\t\t\t\t\t}\n\t\t\t\t\txhr.responseXML = null;\n\t\t\t\t}, 100);\n\t\t\t}\n\n\t\t\tvar toXml = $.parseXML || function(s, doc) { // use parseXML if available (jQuery 1.5+)\n\t\t\t\tif (window.ActiveXObject) {\n\t\t\t\t\tdoc = new ActiveXObject('Microsoft.XMLDOM');\n\t\t\t\t\tdoc.async = 'false';\n\t\t\t\t\tdoc.loadXML(s);\n\n\t\t\t\t} else {\n\t\t\t\t\tdoc = (new DOMParser()).parseFromString(s, 'text/xml');\n\t\t\t\t}\n\n\t\t\t\treturn (doc && doc.documentElement && doc.documentElement.nodeName !== 'parsererror') ? doc : null;\n\t\t\t};\n\t\t\tvar parseJSON = $.parseJSON || function(s) {\n\t\t\t\t/* jslint evil:true */\n\t\t\t\treturn window['eval']('(' + s + ')');\t\t\t// eslint-disable-line dot-notation\n\t\t\t};\n\n\t\t\tvar httpData = function(xhr, type, s) { // mostly lifted from jq1.4.4\n\n\t\t\t\tvar ct = xhr.getResponseHeader('content-type') || '',\n\t\t\t\t\txml = ((type === 'xml' || !type) && ct.indexOf('xml') >= 0),\n\t\t\t\t\tdata = xml ? xhr.responseXML : xhr.responseText;\n\n\t\t\t\tif (xml && data.documentElement.nodeName === 'parsererror') {\n\t\t\t\t\tif ($.error) {\n\t\t\t\t\t\t$.error('parsererror');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (s && s.dataFilter) {\n\t\t\t\t\tdata = s.dataFilter(data, type);\n\t\t\t\t}\n\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\tif ((type === 'json' || !type) && ct.indexOf('json') >= 0) {\n\t\t\t\t\t\tdata = parseJSON(data);\n\t\t\t\t\t} else if ((type === 'script' || !type) && ct.indexOf('javascript') >= 0) {\n\t\t\t\t\t\t$.globalEval(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t};\n\n\t\t\treturn deferred;\n\t\t}\n\t};\n\n\t/**\n\t * ajaxForm() provides a mechanism for fully automating form submission.\n\t *\n\t * The advantages of using this method instead of ajaxSubmit() are:\n\t *\n\t * 1: This method will include coordinates for <input type=\"image\"> elements (if the element\n\t *\tis used to submit the form).\n\t * 2. This method will include the submit element's name/value data (for the element that was\n\t *\tused to submit the form).\n\t * 3. This method binds the submit() method to the form for you.\n\t *\n\t * The options argument for ajaxForm works exactly as it does for ajaxSubmit. ajaxForm merely\n\t * passes the options argument along after properly binding events for submit elements and\n\t * the form itself.\n\t */\n\t$.fn.ajaxForm = function(options, data, dataType, onSuccess) {\n\t\tif (typeof options === 'string' || (options === false && arguments.length > 0)) {\n\t\t\toptions = {\n\t\t\t\t'url'      : options,\n\t\t\t\t'data'     : data,\n\t\t\t\t'dataType' : dataType\n\t\t\t};\n\n\t\t\tif (typeof onSuccess === 'function') {\n\t\t\t\toptions.success = onSuccess;\n\t\t\t}\n\t\t}\n\n\t\toptions = options || {};\n\t\toptions.delegation = options.delegation && $.isFunction($.fn.on);\n\n\t\t// in jQuery 1.3+ we can fix mistakes with the ready state\n\t\tif (!options.delegation && this.length === 0) {\n\t\t\tvar o = {s: this.selector, c: this.context};\n\n\t\t\tif (!$.isReady && o.s) {\n\t\t\t\tlog('DOM not ready, queuing ajaxForm');\n\t\t\t\t$(function() {\n\t\t\t\t\t$(o.s, o.c).ajaxForm(options);\n\t\t\t\t});\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()\n\t\t\tlog('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (options.delegation) {\n\t\t\t$(document)\n\t\t\t\t.off('submit.form-plugin', this.selector, doAjaxSubmit)\n\t\t\t\t.off('click.form-plugin', this.selector, captureSubmittingElement)\n\t\t\t\t.on('submit.form-plugin', this.selector, options, doAjaxSubmit)\n\t\t\t\t.on('click.form-plugin', this.selector, options, captureSubmittingElement);\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.ajaxFormUnbind()\n\t\t\t.on('submit.form-plugin', options, doAjaxSubmit)\n\t\t\t.on('click.form-plugin', options, captureSubmittingElement);\n\t};\n\n\t// private event handlers\n\tfunction doAjaxSubmit(e) {\n\t\t/* jshint validthis:true */\n\t\tvar options = e.data;\n\n\t\tif (!e.isDefaultPrevented()) { // if event has been canceled, don't proceed\n\t\t\te.preventDefault();\n\t\t\t$(e.target).closest('form').ajaxSubmit(options); // #365\n\t\t}\n\t}\n\n\tfunction captureSubmittingElement(e) {\n\t\t/* jshint validthis:true */\n\t\tvar target = e.target;\n\t\tvar $el = $(target);\n\n\t\tif (!$el.is('[type=submit],[type=image]')) {\n\t\t\t// is this a child element of the submit el?  (ex: a span within a button)\n\t\t\tvar t = $el.closest('[type=submit]');\n\n\t\t\tif (t.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttarget = t[0];\n\t\t}\n\n\t\tvar form = target.form;\n\n\t\tform.clk = target;\n\n\t\tif (target.type === 'image') {\n\t\t\tif (typeof e.offsetX !== 'undefined') {\n\t\t\t\tform.clk_x = e.offsetX;\n\t\t\t\tform.clk_y = e.offsetY;\n\n\t\t\t} else if (typeof $.fn.offset === 'function') {\n\t\t\t\tvar offset = $el.offset();\n\n\t\t\t\tform.clk_x = e.pageX - offset.left;\n\t\t\t\tform.clk_y = e.pageY - offset.top;\n\n\t\t\t} else {\n\t\t\t\tform.clk_x = e.pageX - target.offsetLeft;\n\t\t\t\tform.clk_y = e.pageY - target.offsetTop;\n\t\t\t}\n\t\t}\n\t\t// clear form vars\n\t\tsetTimeout(function() {\n\t\t\tform.clk = form.clk_x = form.clk_y = null;\n\t\t}, 100);\n\t}\n\n\n\t// ajaxFormUnbind unbinds the event handlers that were bound by ajaxForm\n\t$.fn.ajaxFormUnbind = function() {\n\t\treturn this.off('submit.form-plugin click.form-plugin');\n\t};\n\n\t/**\n\t * formToArray() gathers form element data into an array of objects that can\n\t * be passed to any of the following ajax functions: $.get, $.post, or load.\n\t * Each object in the array has both a 'name' and 'value' property. An example of\n\t * an array for a simple login form might be:\n\t *\n\t * [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]\n\t *\n\t * It is this array that is passed to pre-submit callback functions provided to the\n\t * ajaxSubmit() and ajaxForm() methods.\n\t */\n\t$.fn.formToArray = function(semantic, elements, filtering) {\n\t\tvar a = [];\n\n\t\tif (this.length === 0) {\n\t\t\treturn a;\n\t\t}\n\n\t\tvar form = this[0];\n\t\tvar formId = this.attr('id');\n\t\tvar els = (semantic || typeof form.elements === 'undefined') ? form.getElementsByTagName('*') : form.elements;\n\t\tvar els2;\n\n\t\tif (els) {\n\t\t\tels = $.makeArray(els); // convert to standard array\n\t\t}\n\n\t\t// #386; account for inputs outside the form which use the 'form' attribute\n\t\t// FinesseRus: in non-IE browsers outside fields are already included in form.elements.\n\t\tif (formId && (semantic || /(Edge|Trident)\\//.test(navigator.userAgent))) {\n\t\t\tels2 = $(':input[form=\"' + formId + '\"]').get(); // hat tip @thet\n\t\t\tif (els2.length) {\n\t\t\t\tels = (els || []).concat(els2);\n\t\t\t}\n\t\t}\n\n\t\tif (!els || !els.length) {\n\t\t\treturn a;\n\t\t}\n\n\t\tif ($.isFunction(filtering)) {\n\t\t\tels = $.map(els, filtering);\n\t\t}\n\n\t\tvar i, j, n, v, el, max, jmax;\n\n\t\tfor (i = 0, max = els.length; i < max; i++) {\n\t\t\tel = els[i];\n\t\t\tn = el.name;\n\t\t\tif (!n || el.disabled) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (semantic && form.clk && el.type === 'image') {\n\t\t\t\t// handle image inputs on the fly when semantic == true\n\t\t\t\tif (form.clk === el) {\n\t\t\t\t\ta.push({name: n, value: $(el).val(), type: el.type});\n\t\t\t\t\ta.push({name: n + '.x', value: form.clk_x}, {name: n + '.y', value: form.clk_y});\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tv = $.fieldValue(el, true);\n\t\t\tif (v && v.constructor === Array) {\n\t\t\t\tif (elements) {\n\t\t\t\t\telements.push(el);\n\t\t\t\t}\n\t\t\t\tfor (j = 0, jmax = v.length; j < jmax; j++) {\n\t\t\t\t\ta.push({name: n, value: v[j]});\n\t\t\t\t}\n\n\t\t\t} else if (feature.fileapi && el.type === 'file') {\n\t\t\t\tif (elements) {\n\t\t\t\t\telements.push(el);\n\t\t\t\t}\n\n\t\t\t\tvar files = el.files;\n\n\t\t\t\tif (files.length) {\n\t\t\t\t\tfor (j = 0; j < files.length; j++) {\n\t\t\t\t\t\ta.push({name: n, value: files[j], type: el.type});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// #180\n\t\t\t\t\ta.push({name: n, value: '', type: el.type});\n\t\t\t\t}\n\n\t\t\t} else if (v !== null && typeof v !== 'undefined') {\n\t\t\t\tif (elements) {\n\t\t\t\t\telements.push(el);\n\t\t\t\t}\n\t\t\t\ta.push({name: n, value: v, type: el.type, required: el.required});\n\t\t\t}\n\t\t}\n\n\t\tif (!semantic && form.clk) {\n\t\t\t// input type=='image' are not found in elements array! handle it here\n\t\t\tvar $input = $(form.clk), input = $input[0];\n\n\t\t\tn = input.name;\n\n\t\t\tif (n && !input.disabled && input.type === 'image') {\n\t\t\t\ta.push({name: n, value: $input.val()});\n\t\t\t\ta.push({name: n + '.x', value: form.clk_x}, {name: n + '.y', value: form.clk_y});\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t};\n\n\t/**\n\t * Serializes form data into a 'submittable' string. This method will return a string\n\t * in the format: name1=value1&amp;name2=value2\n\t */\n\t$.fn.formSerialize = function(semantic) {\n\t\t// hand off to jQuery.param for proper encoding\n\t\treturn $.param(this.formToArray(semantic));\n\t};\n\n\t/**\n\t * Serializes all field elements in the jQuery object into a query string.\n\t * This method will return a string in the format: name1=value1&amp;name2=value2\n\t */\n\t$.fn.fieldSerialize = function(successful) {\n\t\tvar a = [];\n\n\t\tthis.each(function() {\n\t\t\tvar n = this.name;\n\n\t\t\tif (!n) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar v = $.fieldValue(this, successful);\n\n\t\t\tif (v && v.constructor === Array) {\n\t\t\t\tfor (var i = 0, max = v.length; i < max; i++) {\n\t\t\t\t\ta.push({name: n, value: v[i]});\n\t\t\t\t}\n\n\t\t\t} else if (v !== null && typeof v !== 'undefined') {\n\t\t\t\ta.push({name: this.name, value: v});\n\t\t\t}\n\t\t});\n\n\t\t// hand off to jQuery.param for proper encoding\n\t\treturn $.param(a);\n\t};\n\n\t/**\n\t * Returns the value(s) of the element in the matched set. For example, consider the following form:\n\t *\n\t *\t<form><fieldset>\n\t *\t\t<input name=\"A\" type=\"text\">\n\t *\t\t<input name=\"A\" type=\"text\">\n\t *\t\t<input name=\"B\" type=\"checkbox\" value=\"B1\">\n\t *\t\t<input name=\"B\" type=\"checkbox\" value=\"B2\">\n\t *\t\t<input name=\"C\" type=\"radio\" value=\"C1\">\n\t *\t\t<input name=\"C\" type=\"radio\" value=\"C2\">\n\t *\t</fieldset></form>\n\t *\n\t *\tvar v = $('input[type=text]').fieldValue();\n\t *\t// if no values are entered into the text inputs\n\t *\tv === ['','']\n\t *\t// if values entered into the text inputs are 'foo' and 'bar'\n\t *\tv === ['foo','bar']\n\t *\n\t *\tvar v = $('input[type=checkbox]').fieldValue();\n\t *\t// if neither checkbox is checked\n\t *\tv === undefined\n\t *\t// if both checkboxes are checked\n\t *\tv === ['B1', 'B2']\n\t *\n\t *\tvar v = $('input[type=radio]').fieldValue();\n\t *\t// if neither radio is checked\n\t *\tv === undefined\n\t *\t// if first radio is checked\n\t *\tv === ['C1']\n\t *\n\t * The successful argument controls whether or not the field element must be 'successful'\n\t * (per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).\n\t * The default value of the successful argument is true. If this value is false the value(s)\n\t * for each element is returned.\n\t *\n\t * Note: This method *always* returns an array. If no valid value can be determined the\n\t *\tarray will be empty, otherwise it will contain one or more values.\n\t */\n\t$.fn.fieldValue = function(successful) {\n\t\tfor (var val = [], i = 0, max = this.length; i < max; i++) {\n\t\t\tvar el = this[i];\n\t\t\tvar v = $.fieldValue(el, successful);\n\n\t\t\tif (v === null || typeof v === 'undefined' || (v.constructor === Array && !v.length)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (v.constructor === Array) {\n\t\t\t\t$.merge(val, v);\n\t\t\t} else {\n\t\t\t\tval.push(v);\n\t\t\t}\n\t\t}\n\n\t\treturn val;\n\t};\n\n\t/**\n\t * Returns the value of the field element.\n\t */\n\t$.fieldValue = function(el, successful) {\n\t\tvar n = el.name, t = el.type, tag = el.tagName.toLowerCase();\n\n\t\tif (typeof successful === 'undefined') {\n\t\t\tsuccessful = true;\n\t\t}\n\n\t\t/* eslint-disable no-mixed-operators */\n\t\tif (successful && (!n || el.disabled || t === 'reset' || t === 'button' ||\n\t\t\t(t === 'checkbox' || t === 'radio') && !el.checked ||\n\t\t\t(t === 'submit' || t === 'image') && el.form && el.form.clk !== el ||\n\t\t\ttag === 'select' && el.selectedIndex === -1)) {\n\t\t/* eslint-enable no-mixed-operators */\n\t\t\treturn null;\n\t\t}\n\n\t\tif (tag === 'select') {\n\t\t\tvar index = el.selectedIndex;\n\n\t\t\tif (index < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar a = [], ops = el.options;\n\t\t\tvar one = (t === 'select-one');\n\t\t\tvar max = (one ? index + 1 : ops.length);\n\n\t\t\tfor (var i = (one ? index : 0); i < max; i++) {\n\t\t\t\tvar op = ops[i];\n\n\t\t\t\tif (op.selected && !op.disabled) {\n\t\t\t\t\tvar v = op.value;\n\n\t\t\t\t\tif (!v) { // extra pain for IE...\n\t\t\t\t\t\tv = (op.attributes && op.attributes.value && !(op.attributes.value.specified)) ? op.text : op.value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (one) {\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\n\t\t\t\t\ta.push(v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\n\t\treturn $(el).val().replace(rCRLF, '\\r\\n');\n\t};\n\n\t/**\n\t * Clears the form data. Takes the following actions on the form's input fields:\n\t *  - input text fields will have their 'value' property set to the empty string\n\t *  - select elements will have their 'selectedIndex' property set to -1\n\t *  - checkbox and radio inputs will have their 'checked' property set to false\n\t *  - inputs of type submit, button, reset, and hidden will *not* be effected\n\t *  - button elements will *not* be effected\n\t */\n\t$.fn.clearForm = function(includeHidden) {\n\t\treturn this.each(function() {\n\t\t\t$('input,select,textarea', this).clearFields(includeHidden);\n\t\t});\n\t};\n\n\t/**\n\t * Clears the selected form elements.\n\t */\n\t$.fn.clearFields = $.fn.clearInputs = function(includeHidden) {\n\t\tvar re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; // 'hidden' is not in this list\n\n\t\treturn this.each(function() {\n\t\t\tvar t = this.type, tag = this.tagName.toLowerCase();\n\n\t\t\tif (re.test(t) || tag === 'textarea') {\n\t\t\t\tthis.value = '';\n\n\t\t\t} else if (t === 'checkbox' || t === 'radio') {\n\t\t\t\tthis.checked = false;\n\n\t\t\t} else if (tag === 'select') {\n\t\t\t\tthis.selectedIndex = -1;\n\n\t\t\t} else if (t === 'file') {\n\t\t\t\tif (/MSIE/.test(navigator.userAgent)) {\n\t\t\t\t\t$(this).replaceWith($(this).clone(true));\n\t\t\t\t} else {\n\t\t\t\t\t$(this).val('');\n\t\t\t\t}\n\n\t\t\t} else if (includeHidden) {\n\t\t\t\t// includeHidden can be the value true, or it can be a selector string\n\t\t\t\t// indicating a special test; for example:\n\t\t\t\t// $('#myForm').clearForm('.special:hidden')\n\t\t\t\t// the above would clean hidden inputs that have the class of 'special'\n\t\t\t\tif ((includeHidden === true && /hidden/.test(t)) ||\n\t\t\t\t\t(typeof includeHidden === 'string' && $(this).is(includeHidden))) {\n\t\t\t\t\tthis.value = '';\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n\t/**\n\t * Resets the form data or individual elements. Takes the following actions\n\t * on the selected tags:\n\t * - all fields within form elements will be reset to their original value\n\t * - input / textarea / select fields will be reset to their original value\n\t * - option / optgroup fields (for multi-selects) will defaulted individually\n\t * - non-multiple options will find the right select to default\n\t * - label elements will be searched against its 'for' attribute\n\t * - all others will be searched for appropriate children to default\n\t */\n\t$.fn.resetForm = function() {\n\t\treturn this.each(function() {\n\t\t\tvar el = $(this);\n\t\t\tvar tag = this.tagName.toLowerCase();\n\n\t\t\tswitch (tag) {\n\t\t\tcase 'input':\n\t\t\t\tthis.checked = this.defaultChecked;\n\t\t\t\t\t// fall through\n\n\t\t\tcase 'textarea':\n\t\t\t\tthis.value = this.defaultValue;\n\n\t\t\t\treturn true;\n\n\t\t\tcase 'option':\n\t\t\tcase 'optgroup':\n\t\t\t\tvar select = el.parents('select');\n\n\t\t\t\tif (select.length && select[0].multiple) {\n\t\t\t\t\tif (tag === 'option') {\n\t\t\t\t\t\tthis.selected = this.defaultSelected;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.find('option').resetForm();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tselect.resetForm();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\tcase 'select':\n\t\t\t\tel.find('option').each(function(i) {\t\t\t\t// eslint-disable-line consistent-return\n\t\t\t\t\tthis.selected = this.defaultSelected;\n\t\t\t\t\tif (this.defaultSelected && !el[0].multiple) {\n\t\t\t\t\t\tel[0].selectedIndex = i;\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\n\t\t\tcase 'label':\n\t\t\t\tvar forEl = $(el.attr('for'));\n\t\t\t\tvar list = el.find('input,select,textarea');\n\n\t\t\t\tif (forEl[0]) {\n\t\t\t\t\tlist.unshift(forEl[0]);\n\t\t\t\t}\n\n\t\t\t\tlist.resetForm();\n\n\t\t\t\treturn true;\n\n\t\t\tcase 'form':\n\t\t\t\t\t// guard against an input with the name of 'reset'\n\t\t\t\t\t// note that IE reports the reset function as an 'object'\n\t\t\t\tif (typeof this.reset === 'function' || (typeof this.reset === 'object' && !this.reset.nodeType)) {\n\t\t\t\t\tthis.reset();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\tdefault:\n\t\t\t\tel.find('form,input,label,select,textarea').resetForm();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Enables or disables any matching elements.\n\t */\n\t$.fn.enable = function(b) {\n\t\tif (typeof b === 'undefined') {\n\t\t\tb = true;\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tthis.disabled = !b;\n\t\t});\n\t};\n\n\t/**\n\t * Checks/unchecks any matching checkboxes or radio buttons and\n\t * selects/deselects and matching option elements.\n\t */\n\t$.fn.selected = function(select) {\n\t\tif (typeof select === 'undefined') {\n\t\t\tselect = true;\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar t = this.type;\n\n\t\t\tif (t === 'checkbox' || t === 'radio') {\n\t\t\t\tthis.checked = select;\n\n\t\t\t} else if (this.tagName.toLowerCase() === 'option') {\n\t\t\t\tvar $sel = $(this).parent('select');\n\n\t\t\t\tif (select && $sel[0] && $sel[0].type === 'select-one') {\n\t\t\t\t\t// deselect all other options\n\t\t\t\t\t$sel.find('option').selected(false);\n\t\t\t\t}\n\n\t\t\t\tthis.selected = select;\n\t\t\t}\n\t\t});\n\t};\n\n\t// expose debug var\n\t$.fn.ajaxSubmit.debug = false;\n\n\t// helper fn for console logging\n\tfunction log() {\n\t\tif (!$.fn.ajaxSubmit.debug) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar msg = '[jquery.form] ' + Array.prototype.join.call(arguments, '');\n\n\t\tif (window.console && window.console.log) {\n\t\t\twindow.console.log(msg);\n\n\t\t} else if (window.opera && window.opera.postError) {\n\t\t\twindow.opera.postError(msg);\n\t\t}\n\t}\n}));\n","/*!\n * jQuery serializeObject - v0.2 - 1/20/2010\n * http://benalman.com/projects/jquery-misc-plugins/\n * \n * Copyright (c) 2010 \"Cowboy\" Ben Alman\n * Dual licensed under the MIT and GPL licenses.\n * http://benalman.com/about/license/\n */\n\n// Whereas .serializeArray() serializes a form into an array, .serializeObject()\n// serializes a form into an (arguably more useful) object.\n\n(function($,undefined){\n  '$:nomunge'; // Used by YUI compressor.\n  \n  $.fn.serializeObject = function(){\n    var obj = {};\n    \n    $.each( this.serializeArray(), function(i,o){\n      var n = o.name,\n        v = o.value;\n        \n        obj[n] = obj[n] === undefined ? v\n          : $.isArray( obj[n] ) ? obj[n].concat( v )\n          : [ obj[n], v ];\n    });\n    \n    return obj;\n  };\n  \n})(jQuery);\n","/**\n * Copyright (C) 2017 Kyle Florence\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * @website https://github.com/kflorence/jquery-deserialize/\n * @version 2.0.0-rc1\n *\n * Dual licensed under the MIT and GPLv2 licenses.\n *\n * Changes by Konstantin Fedorov 2017 - Checking that URL params that do not exist in a form\n * Changes by Max Butenko 2017\n  */\n(function( factory ) {\n  if ( typeof module === \"object\" && module.exports ) {\n    // Node/CommonJS\n    module.exports = factory( require( \"jquery\" ) );\n  } else {\n    // Browser globals\n    factory( window.jQuery );\n  }\n}(function( $ ) {\n\n  /**\n   * Updates a key/valueArray with the given property and value. Values will always be stored as arrays.\n   *\n   * @param prop The property to add the value to.\n   * @param value The value to add.\n   * @param obj The object to update.\n   * @returns {object} Updated object.\n   */\n  function updateKeyValueArray( prop, value, obj ) {\n    var current = obj[ prop ];\n\n    if ( current === undefined ) {\n      obj[ prop ] = [ value ];\n\n    } else {\n      current.push( value );\n    }\n\n    return obj;\n  }\n\n  /**\n   * Map of property name -> element types.\n   *\n   * @type {object}\n   */\n  var updateTypes = {\n    checked: [\n      \"radio\",\n      \"checkbox\"\n    ],\n    selected: [\n      \"option\",\n      \"select-one\",\n      \"select-multiple\"\n    ],\n    value: [\n      \"button\",\n      \"color\",\n      \"date\",\n      \"datetime\",\n      \"datetime-local\",\n      \"email\",\n      \"hidden\",\n      \"month\",\n      \"number\",\n      \"password\",\n      \"range\",\n      \"reset\",\n      \"search\",\n      \"submit\",\n      \"tel\",\n      \"text\",\n      \"textarea\",\n      \"time\",\n      \"url\",\n      \"week\"\n    ],\n    innerHTML: [\n      \"label\",\n      \"div\",\n      \"span\"\n    ]\n  };\n\n  /**\n   * Get all of the fields contained within the given elements by name.\n   *\n   * @param $elements jQuery object of elements.\n   * @param filter Custom filter to apply to the list of fields.\n   * @returns {object} All of the fields contained within the given elements, keyed by name.\n   */\n  function getFieldsByName( elements, filter ) {\n    var elementsByName = {};\n    // Extract fields from elements\n    //var fields = $(elements[0].children)\n    var fields = $(elements[0]).find(\"*\")\n      .filter( filter || \":not(:disabled)\" )\n      .get();\n\n    $.each( fields, function( index, field ) {\n      var fname = \"\";\n      if ($.inArray(getElementType(field), updateTypes.innerHTML) > -1) {\n        fname = $(field).attr(\"id\");\n      } else {\n        fname = $(field).attr(\"name\");\n      }\n\n      updateKeyValueArray(fname, field, elementsByName );\n    });\n\n    return elementsByName;\n  }\n\n  /**\n   * Figure out the type of an element. Input type will be used first, falling back to nodeName.\n   *\n   * @param element DOM element to check type of.\n   * @returns {string} The element's type.\n   */\n  function getElementType( element ) {\n    return ( element.type || element.nodeName ).toLowerCase();\n  }\n\n  /**\n   * Normalize the provided data into a key/valueArray store.\n   *\n   * @param data The data provided by the user to the plugin.\n   * @returns {object} The data normalized into a key/valueArray store.\n   */\n  function normalizeData( data ) {\n    var normalized = {};\n    var rPlus = /\\+/g;\n\n    // Convert data from .serializeObject() notation\n    if ( $.isPlainObject( data ) ) {\n      $.extend( normalized, data );\n\n      // Convert non-array values into an array\n      $.each( normalized, function( name, value ) {\n        if ( !$.isArray( value ) ) {\n          normalized[ name ] = [ value ];\n        }\n      });\n\n    // Convert data from .serializeArray() notation\n    } else if ( $.isArray( data ) ) {\n      $.each( data, function( index, field ) {\n        updateKeyValueArray( field.name, field.value, normalized );\n      });\n\n    // Convert data from .serialize() notation\n    } else if ( typeof data === \"string\" ) {\n      $.each( data.split( \"&\" ), function( index, field ) {\n        var current = field.split( \"=\" );\n        var name = decodeURIComponent( current[ 0 ].replace( rPlus, \"%20\" ) );\n        var value = decodeURIComponent( current[ 1 ].replace( rPlus, \"%20\" ) );\n        updateKeyValueArray( name, value, normalized );\n      });\n    }\n\n    return normalized;\n  }\n\n  /**\n   * Get the property to update on an element being updated.\n   *\n   * @param element The DOM element to get the property for.\n   * @returns The name of the property to update if element is supported, otherwise `undefined`.\n   */\n  function getPropertyToUpdate( element ) {\n    var type = getElementType( element );\n    var elementProperty = undefined;\n\n    $.each( updateTypes, function( property, types ) {\n      if ( $.inArray( type, types ) > -1 ) {\n        elementProperty = property;\n        return false;\n      }\n    });\n\n    return elementProperty;\n  }\n\n  /**\n   * Update the element based on the provided data.\n   *\n   * @param element The DOM element to update.\n   * @param elementIndex The index of this element in the list of elements with the same name.\n   * @param value The serialized element value.\n   * @param valueIndex The index of the value in the list of values for elements with the same name.\n   * @param callback A function to call if the value of an element was updated.\n   */\n  function update( element, elementIndex, value, valueIndex, callback ) {\n    var property = getPropertyToUpdate( element );\n\n    // Handle value inputs\n    // If there are multiple value inputs with the same name, they will be populated by matching indexes.\n    if ( property == \"value\" && elementIndex == valueIndex ) {\n      element.value = value;\n      callback.call( element, value );\n\n    // Handle select menus, checkboxes and radio buttons\n    } else if ( property == \"checked\" || property == \"selected\" ) {\n      var fields = [];\n\n      // Extract option fields from select menus\n      if ( element.options ) {\n        $.each( element.options, function( index, option ) {\n          fields.push( option );\n        });\n\n      } else {\n        fields.push( element );\n      }\n\n      // #37: Remove selection from multiple select menus before deserialization\n      if ( element.multiple && valueIndex == 0 ) {\n        element.selectedIndex = -1;\n      }\n\n      $.each( fields, function( index, field ) {\n          if ( field.value == value ) {\n            field[ property ] = true;\n            callback.call( field, value );\n          }\n          //else {\n          //  field[ property ] = false;\n          //}\n      });\n    } else if ( property == \"innerHTML\" ) {\n      element.innerHTML = value;\n      callback.call( element, value );\n    }\n  }\n\n  /**\n   * Default plugin options.\n   *\n   * @type {object}\n   */\n  var defaultOptions = {\n    change: $.noop,\n    complete: $.noop\n  };\n\n  /**\n   * The $.deserialize function.\n   *\n   * @param data The data to deserialize.\n   * @param options Additional options.\n   * @returns {jQuery} The jQuery object that was provided to the plugin.\n   */\n  $.fn.deserialize = function( data, options ) {\n\n    // Backwards compatible with old arguments: data, callback\n    if ( $.isFunction( options ) ) {\n      options = { complete: options };\n    }\n\n    options = $.extend( defaultOptions, options || {} );\n    data = normalizeData( data );\n    var elementsByName = getFieldsByName( this, options.filter );\n\n    if (!options.prefix) {\n      options.prefix = '';\n    }\n\n    $.each( data, function( name, values ) {\n      var elname = options.prefix+name;\n      if( elname in elementsByName ) {\n        $.each( elementsByName[ elname ], function( elementIndex, element ) {\n          $.each( values, function( valueIndex, value ) {\n            update( element, elementIndex, value, valueIndex, options.change );\n          });\n        });\n      }\n    });\n\n    options.complete.call( this );\n\n    return this;\n  };\n}));\n","/**\r\n * Copyright (C) 2018-2019 Max Butenko\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * @website https://github.com/maxworker/jquery-serverstate/\r\n * @version 1.0.0-rc1\r\n *\r\n * Dual licensed under the MIT and GPLv2 licenses.\r\n */\r\n(function( factory ) {\r\n  if ( typeof module === \"object\" && module.exports ) {\r\n    // Node/CommonJS\r\n    module.exports = factory( require( \"jquery\" ) );\r\n  } else {\r\n    // Browser globals\r\n    factory( window.jQuery );\r\n  }\r\n}(function( $ ) {\r\n\r\n\r\n  /**\r\n   * Default plugin options.\r\n   *\r\n   * @type {object}\r\n   */\r\n  var defaultParams = {\r\n    currentts: $.now()\r\n  };\r\n\r\n\r\n  function deserializeForm(obj, data, options) {\r\n    obj.deserialize(data, options);\r\n  }\r\n\r\n  function deserializeFormCallback(obj, data, options, callback) {\r\n    deserializeForm(obj, data, options);\r\n    callback(data);\r\n  }\r\n\r\n  function formValidation(obj) {\r\n      var formValid = true;\r\n      var validField = function (field) {\r\n          if (field.disabled || field.type === 'file' || field.type === 'reset' || field.type === 'submit' || field.type === 'button') return true;\r\n          return field.validity.valid;\r\n      };\r\n\r\n      obj.find('input,select,textarea').each(function(index, field){\r\n          if (!validField(field)) {\r\n              formValid = false;\r\n              return false;\r\n          }\r\n      });\r\n      return formValid;\r\n  }\r\n\r\n  /**\r\n   * The $.stateInit function.\r\n   *\r\n   * @param endpoint The server endpoint.\r\n   * @param options Additional options - formData - json object with form data.\r\n   * @returns {jQuery} The jQuery object that was provided to the plugin.\r\n   */\r\n  $.fn.stateInit = function( endpoint, options ) {\r\n    if ( !$.isFunction( $.fn.ajaxForm )) {\r\n      return false;\r\n    }\r\n    var obj = this;\r\n    if (endpoint) {\r\n        this.data('serverEndpoint', endpoint);\r\n        options = $.extend( {\r\n                      url: endpoint,\r\n                      dataType: 'json',\r\n                      type: 'POST',\r\n                      success: function (data) { deserializeForm(obj, data, options); }\r\n                  }, options || {} );\r\n    } else {\r\n        options = $.extend( {\r\n                      dataType: 'json',\r\n                      type: 'POST',\r\n                      success: function (data) { deserializeForm(obj, data, options); }\r\n                  }, options || {} );\r\n    }\r\n    if (options.formData) {\r\n        deserializeForm(obj, options.formData, options);\r\n    }\r\n    this.ajaxForm(options);\r\n    return this;\r\n  };\r\n\r\n  $.fn.stateSave = function(params, options) {\r\n    if ( !$.isFunction( $.fn.ajaxSubmit )) {\r\n      return false;\r\n    }\r\n\r\n    defaultParams.currentts = $.now();\r\n    params = $.extend( defaultParams, params || {} );\r\n\r\n    var url;\r\n    if (options && options.url) {\r\n      url = options.url;\r\n    } else {\r\n      url = this.data('serverEndpoint');\r\n    }\r\n\r\n    if (url) {\r\n        options = $.extend( {type:'POST', url: url, dataType: 'json'}, options || {});\r\n    } else {\r\n        options = $.extend( {type:'POST', dataType: 'json'}, options || {});\r\n    }\r\n\r\n    if (!options.disableFormValidation) {\r\n        if (!formValidation(this)) {\r\n            if (options.validationCallback) {\r\n                options.validationCallback();\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    options = $.extend( {data:  params}, options);\r\n\r\n    this.ajaxSubmit(options);\r\n    return this;\r\n  };\r\n\r\n  $.fn.stateJsonSave = function(params, options) {\r\n    if ( !$.isFunction( $.fn.serializeObject )) {\r\n      return false;\r\n    }\r\n\r\n    if (!axios) {\r\n      return false;\r\n    }\r\n\r\n    defaultParams.currentts = $.now();\r\n    params = $.extend( defaultParams, params || {} );\r\n\r\n    var url;\r\n    if (options && options.url) {\r\n      url = options.url;\r\n    } else {\r\n      url = this.data('serverEndpoint');\r\n    }\r\n\r\n    if (!options.disableFormValidation) {\r\n        if (!formValidation(this)) {\r\n            if (options.validationCallback) {\r\n                options.validationCallback();\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    params = $.extend(this.serializeObject(), params);\r\n\r\n    axios.post(url, params).then( function (response) {\r\n        if (options.success) {\r\n          options.success(response.data);\r\n        }\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  $.fn.stateLoad = function(params, options ) {\r\n    if ( !$.isFunction( $.fn.deserialize )) {\r\n      return false;\r\n    }\r\n\r\n    defaultParams.currentts = $.now();\r\n    params = $.extend( defaultParams, params || {} );\r\n\r\n    var url;\r\n    if (options.url) {\r\n      url = options.url;\r\n    } else {\r\n      url = this.data('serverEndpoint');\r\n      if (!url) {\r\n          url = this.attr('action');\r\n      }\r\n    }\r\n    var obj = this;\r\n    $.getJSON(url, params, function (data) { deserializeForm(obj, data, options);} );\r\n\r\n    return this;\r\n  };\r\n\r\n  $.fn.stateSubmit = function(params, options) {\r\n    var obj = this;\r\n    if (options && options.success) {\r\n        var optSuccess = options.success;\r\n        options = $.extend(options || {}, {success: function (data) { deserializeFormCallback(obj, data, options, optSuccess);}} );\r\n    } else {\r\n        options = $.extend({success: function (data) { deserializeForm(obj, data, options);} }, options || {} );\r\n    }\r\n\r\n    this.stateSave(params, options);\r\n    return this;\r\n  };\r\n\r\n  $.fn.stateJsonSubmit = function(params, options) {\r\n    var obj = this;\r\n    if (options && options.success) {\r\n        var optSuccess = options.success;\r\n        options = $.extend(options || {}, {success: function (data) { deserializeFormCallback(obj, data, options, optSuccess);} });\r\n    } else {\r\n        options = $.extend({success: function (data) { deserializeForm(obj, data, options);} }, options || {} );\r\n    }\r\n\r\n    this.stateJsonSave(params, options);\r\n    return this;\r\n  };\r\n\r\n\r\n}));\r\n"],"sourceRoot":""}